@charset "UTF-8";
/*------------------------------------*    #PULLING IN CONTENTS
\*------------------------------------*/
/*------------------------------------*  #DEBUG
\*------------------------------------*/
/*
    pesticide v0.1.0 . @mrmrs . MIT
*/
/**
 * #SETTINGS
 */
/*!
 * CTC - COTTON THOMPSON COLE
 * Author: Will Russell, 
 *         Ragged Edge
 */
/*------------------------------------*    #GLOBAL TOOLS
\*------------------------------------*/
/*------------------------------------*    #GLOBAL
\*------------------------------------*/
/*------------------------------------*    #COLORS
\*------------------------------------*/
/*------------------------------------*    #SETTINGS-RESPONSIVE
\*------------------------------------*/
/**
 * #TOOLS
 */
/*------------------------------------*    #FUNCTIONS
\*------------------------------------*/
/*------------------------------------*    #MIXINS
\*------------------------------------*/
/*  #Responsive breakpoints mixin
--------------------------------------*/
/*  #Size helper
--------------------------------------*/
/**
 * #GENERIC
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 0; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

:root {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%; }

input[type="number"] {
  width: auto; }

input[type="search"] {
  -webkit-appearance: textfield; }
  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

textarea {
  resize: vertical; }

@media screen {
  [hidden~="screen"] {
    display: inherit; }
  [hidden~="screen"]:not(:active):not(:focus):not(:target) {
    clip: rect(0 0 0 0) !important;
    position: absolute !important; } }

/*------------------------------------*    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr, button {
  margin: 0;
  padding: 0; }

button {
  border: 0;
  background-color: transparent;
  outline: none; }

address {
  font-style: normal; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

audio,
canvas,
img,
video {
  vertical-align: middle; }

a img {
  border: none; }

.media {
  position: relative;
  padding-top: 30px;
  padding-bottom: 56.25%;
  height: 0;
  height: auto;
  max-width: 100%;
  margin-bottom: 1em;
  overflow: hidden; }

.media iframe,
.media object,
.media embed,
.media video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  border: 0;
  outline: none;
  background-color: transparent; }

/*------------------------------------*    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/*------------------------------------*    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p,
hr,
table,
fieldset,
pre,
.l-margin-top {
  margin-top: 1.25rem; }

/**
 * #BASE
 */
/*------------------------------------*    #FONT
\*------------------------------------*/
/*------------------------------------*    #PAGE
\*------------------------------------*/
html {
  background-color: #fff;
  color: #000;
  overflow-y: scroll;
  min-height: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeSpeed; }

body {
  font-family: "freight-text-pro", serif;
  font-weight: 400; }

.site__inner {
  padding-top: 6.25rem;
  padding-bottom: 6.25rem; }
  @media screen and (min-width: 50em) {
    .site__inner {
      padding-top: 16.875rem; } }

/*------------------------------------*    #TYPE
\*------------------------------------*/
/**
 * Headings 1–6.
 */
h1, .t-alpha,
h2, .t-beta,
h3, .t-gamma,
h4, .t-delta {
  font-weight: 700;
  text-rendering: optimizeLegibility; }

h1, .t-alpha {
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 600;
  letter-spacing: 0.02em;
  text-transform: uppercase; }
  @media screen and (min-width: 50em) {
    h1, .t-alpha {
      font-size: 1.375rem;
      line-height: 2.125rem; } }
  @media screen and (min-width: 78.75em) {
    h1, .t-alpha {
      font-size: 1.875rem;
      line-height: 2.75rem;
      max-width: 48.125rem; } }

h2, .t-beta {
  font-size: 1rem;
  line-height: 1.5rem;
  letter-spacing: 0.2em;
  text-transform: uppercase; }
  @media screen and (min-width: 50em) {
    h2, .t-beta {
      font-size: 1.25rem;
      line-height: 1.75rem; } }

.t-header {
  font-size: 1rem;
  line-height: 1.5rem; }
  @media screen and (min-width: 50em) {
    .t-header {
      font-size: 1.25rem;
      line-height: 1.75rem; } }

/**
 * Paragraphs.
 */
p, .p {
  font-size: 1.25rem;
  line-height: 1.75rem;
  letter-spacing: 0.02em; }

.t-lede {
  font-size: 1.375rem;
  line-height: 1.875rem;
  letter-spacing: 0.030em; }
  @media screen and (min-width: 50em) {
    .t-lede {
      font-size: 1.875rem;
      line-height: 2.375rem; } }
  @media screen and (min-width: 78.75em) {
    .t-lede {
      font-size: 2.625rem;
      line-height: 3.3125rem; } }

.prose .t-lede:first-child {
  margin-top: 0; }

@media screen and (min-width: 50em) {
  .prose {
    width: 65%; } }

@media screen and (min-width: 78.75em) {
  .prose {
    width: 55%; } }

/**
 * Emboldened elements.
 */
strong, b, em, dt {
  font-weight: 700; }

/**
 * Selection rules.
 */
::-moz-selection {
  background: #000;
  color: #fff; }
::selection {
  background: #000;
  color: #fff; }

/*------------------------------------*    #LINKS
\*------------------------------------*/
a {
  color: inherit;
  font-size: inherit;
  line-height: inherit;
  text-decoration: none; }
  a:hover,
  a:active,
  a:focus {
    outline: none;
    text-decoration: none;
    color: #666666; }

p a,
.p a {
  -webkit-transition: color 200ms ease;
          transition: color 200ms ease;
  background-color: transparent;
  background-image: -webkit-linear-gradient(#fff, #fff), -webkit-linear-gradient(#fff, #fff), -webkit-linear-gradient(#fff, #fff);
  background-image: linear-gradient(#fff, #fff), linear-gradient(#fff, #fff), linear-gradient(#fff, #fff);
  /**
  * Use ems instead of pixel if you want 
  * the underline height to be responsive 
  * to font-size.
  **/
  background-size: 0.05em 0.0625rem, 0.05em 0.0625rem, 0.0625rem 0.0625rem;
  background-repeat: no-repeat, no-repeat, repeat-x;
  background-position: 0% 1.125em, 100% 1.125em, 0% 1.125em; }
  p a:hover,
  .p a:hover {
    color: #666666; }

.links-subtle a {
  background-image: none; }

/*------------------------------------*    #SVGs
\*------------------------------------*/
svg {
  display: inline-block;
  vertical-align: top; }

.s-logo {
  width: 13.75rem;
  height: 1.0625rem;
  fill: #000; }

.s-logo-small {
  -webkit-transition: 200ms ease;
          transition: 200ms ease;
  width: 1.8125rem;
  height: 1.8125rem;
  fill: #000;
  -webkit-transform: scale(1);
      -ms-transform: scale(1);
          transform: scale(1); }
  @media screen and (min-width: 50em) {
    .s-logo-small {
      width: 3.75rem;
      height: 3.75rem; } }

.s-scroll-top {
  display: block;
  margin-left: auto;
  width: 0.75rem;
  height: 1.25rem;
  fill: #fff; }

/**
 * #OBJECTS
 */
/*------------------------------------*    #PAGE LOADER
\*------------------------------------*/
.switch {
  -webkit-transition: opacity 1s ease;
          transition: opacity 1s ease;
  opacity: 1; }
  .switch.is-hidden {
    opacity: 0; }

/*------------------------------------*  #WRAPPERS
\*------------------------------------*/
.wrapper {
  margin: 0 auto;
  padding-right: 1.25rem;
  padding-left: 1.25rem; }
  @media screen and (min-width: 78.75em) {
    .wrapper {
      padding-right: 5rem;
      padding-left: 5rem; } }

.wrapper--grid {
  padding-right: 0;
  padding-left: 1.25rem; }
  @media screen and (min-width: 78.75em) {
    .wrapper--grid {
      padding-right: 3.75rem;
      padding-left: 5rem; } }

/*------------------------------------*    #LISTS
\*------------------------------------*/
.list {
  margin: 0;
  padding: 0;
  list-style: none; }
  .list + .list {
    margin-top: 3.75rem; }
  .list h2 {
    margin-top: 0;
    margin-bottom: 1.25rem; }

/**
 * #COMPONENTS
 */
/*------------------------------------*  #HEADER
\*------------------------------------*/
.header {
  position: fixed;
  top: 0;
  z-index: 100;
  width: 100%;
  text-align: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  height: 5.625rem;
  background-color: #fff;
  overflow: hidden;
  -webkit-transition: height 200ms ease, background-color 200ms ease;
          transition: height 200ms ease, background-color 200ms ease; }
  .theme--dark .header {
    background-color: #000; }
  @media screen and (min-width: 50em) {
    .header {
      height: 12.5rem;
      -webkit-box-pack: start;
      -webkit-justify-content: flex-start;
          -ms-flex-pack: start;
              justify-content: flex-start; } }
  .header.is-smaller {
    height: 3.75rem;
    background-color: #000;
    color: #fff; }
    .header.is-smaller svg {
      fill: #fff; }
    .header.is-smaller .s-logo-small {
      -webkit-transform: scale(0.5);
          -ms-transform: scale(0.5);
              transform: scale(0.5); }
    .header.is-smaller .nav__item.is-active {
      color: #666666; }
    .theme--dark .header.is-smaller {
      background-color: #fff;
      color: #000; }
      .theme--dark .header.is-smaller svg {
        fill: #000; }
      .theme--dark .header.is-smaller .nav__item.is-active {
        color: #b3b3b3; }
    .header.is-smaller .logo--large {
      opacity: 0;
      -webkit-transform: translate3d(0, -0.625rem, 0);
              transform: translate3d(0, -0.625rem, 0);
      -webkit-transition: 200ms ease 0.2s;
              transition: 200ms ease 0.2s; }
      .light-gallery .header.is-smaller .logo--large {
        -webkit-transform: translate3d(0, 0, 0);
                transform: translate3d(0, 0, 0);
        opacity: 1; }
    .header.is-smaller .scroll-top {
      opacity: 1;
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0);
      -webkit-transition: 200ms ease 0.2s;
              transition: 200ms ease 0.2s; }
      .light-gallery .header.is-smaller .scroll-top {
        -webkit-transform: translate3d(0, 1.25rem, 0);
                transform: translate3d(0, 1.25rem, 0);
        opacity: 0; }

.logo {
  display: inline-block;
  -webkit-transition: .2s ease;
          transition: .2s ease; }

.logo--small {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.logo--large {
  -webkit-transition: 200ms ease 0;
          transition: 200ms ease 0;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }

.has-arrow {
  position: absolute;
  top: 50%;
  right: 0;
  -webkit-transform: translateY(-50%);
      -ms-transform: translateY(-50%);
          transform: translateY(-50%); }

.scroll-top {
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  opacity: 0;
  -webkit-transition: 200ms ease 0;
          transition: 200ms ease 0;
  -webkit-transform: translate3d(0, 1.25rem, 0);
          transform: translate3d(0, 1.25rem, 0);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }

.nav__item {
  float: left;
  display: inline-block;
  margin-top: 0; }
  .nav__item a {
    padding: 1.25rem; }
    @media screen and (min-width: 78.75em) {
      .nav__item a {
        padding: 5rem; } }
  .nav__item.is-active {
    color: #b3b3b3; }
    .theme--dark .nav__item.is-active {
      color: #666666; }

.nav__item--1 a {
  padding-right: 1.25rem; }

.nav__item--2 {
  -webkit-box-ordinal-group: 2;
  -webkit-order: 1;
      -ms-flex-order: 1;
          order: 1; }
  .nav__item--2 a {
    padding-left: 0; }

/*------------------------------------*  #FOOTER
\*------------------------------------*/
/*------------------------------------*  #GALLERY
\*------------------------------------*/
.gallery img {
  width: 100%; }

.gallery__thumb {
  cursor: pointer; }

.gallery__item,
.gallery__item-sizer {
  width: calc(50% - 20px); }
  @media screen and (min-width: 50em) {
    .gallery__item,
    .gallery__item-sizer {
      width: calc(25% - 20px); } }
  @media screen and (min-width: 116.25em) {
    .gallery__item,
    .gallery__item-sizer {
      width: calc(16.666% - 20px); } }

.gallery__item {
  margin-bottom: 20px; }

.gallery__featured {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% - 20px); }
  @media screen and (min-width: 50em) {
    .gallery__featured {
      width: calc(50% - 20px); } }
  .gallery__featured img {
    margin-bottom: 20px; }

/*------------------------------------*  #SIDEBAR
\*------------------------------------*/
@media screen and (min-width: 50em) {
  .prose {
    float: left; } }

.sidebar {
  margin-top: 3.75rem; }
  @media screen and (min-width: 50em) {
    .sidebar {
      margin-top: 0;
      width: 13.75rem;
      float: right; } }

/**
 * #THEMES
 */
/*------------------------------------*    #Themes
\*------------------------------------*/
.theme--light,
.theme--dark {
  -webkit-transition: background-color 0.2s ease;
          transition: background-color 0.2s ease; }

.theme--dark {
  background-color: #000;
  color: #fff; }
  .theme--dark svg {
    fill: #fff; }
  .theme--dark ::-moz-selection {
    background: #fff;
    color: #000; }
  .theme--dark ::selection {
    background: #fff;
    color: #000; }

/**
 * #TRUMPS
 */
/*------------------------------------*    #SHOW-HIDE
\*------------------------------------*/
@media screen and (max-width: 49.9375em) {
  .h-med-down {
    display: none !important; } }

/*------------------------------------*    #HELPERS
\*------------------------------------*/
.l-clear {
  clear: both; }

.l-cf {
  *zoom: 1; }
  .l-cf:before, .l-cf:after {
    content: " ";
    display: table; }
  .l-cf:after {
    clear: both; }

.l-right {
  float: right; }

.l-abs-center {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.t-hide {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden; }

/*------------------------------------*    #SPACING
\*------------------------------------*/
.l-padding {
  padding: 1.25rem; }
  @media screen and (min-width: 78.75em) {
    .l-padding {
      padding: 5rem; } }

/**
 * #VENDOR
 */
/*------------------------------------*    #IMAGE SETTINGS
\*------------------------------------*/
/** /font-icons if you are not using font icons you can just remove this part/**/
/** / End of font-icons /**/
.light-gallery {
  overflow: hidden; }

.lg-slide {
  font-size: 1.25rem;
  line-height: 1.75rem;
  letter-spacing: 0.02em;
  color: #fff; }
  .lg-slide figcaption {
    margin-top: 1.25rem;
    position: fixed;
    left: 0;
    bottom: 0;
    text-align: left;
    padding: 1.25rem;
    padding-right: 5rem; }
    @media screen and (min-width: 78.75em) {
      .lg-slide figcaption {
        padding: 5rem; } }

#lg-outer {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 20;
  overflow: hidden;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  opacity: 1;
  -webkit-transition: opacity 0.35s ease;
          transition: opacity 0.35s ease;
  background-color: #000; }

#lg-outer .lg-slide {
  position: relative; }

/*lightGallery starting effects*/
#lg-gallery.opacity {
  opacity: 1;
  -webkit-transition: opacity 1s ease 0s;
          transition: opacity 1s ease 0s; }

#lg-gallery.opacity .thumb-cont {
  opacity: 1; }

#lg-gallery.fade-m {
  opacity: 0;
  -webkit-transition: opacity 0.5s ease 0s;
          transition: opacity 0.5s ease 0s; }

/*lightGallery starting effects*/
/*lightGallery core*/
#lg-gallery {
  height: 100%;
  opacity: 0;
  width: 100%;
  position: relative;
  -webkit-transition: opacity 1s ease 0s;
          transition: opacity 1s ease 0s; }

/**/
#lg-slider {
  height: 100%;
  left: 0;
  top: 0;
  width: 100%;
  position: absolute; }

/**/
#lg-slider .lg-slide {
  background: url(/img/logo-small--white.svg) no-repeat scroll center center transparent;
  display: inline-block;
  height: 100%;
  text-align: center;
  width: 100%; }

@-webkit-keyframes pulse_animation {
  0% {
    -webkit-transform: scale(1); }
  30% {
    -webkit-transform: scale(1); }
  40% {
    -webkit-transform: scale(1.08); }
  50% {
    -webkit-transform: scale(1); }
  60% {
    -webkit-transform: scale(1); }
  70% {
    -webkit-transform: scale(1.05); }
  80% {
    -webkit-transform: scale(1); }
  100% {
    -webkit-transform: scale(1); } }

#lg-slider .lg-slide.complete {
  background-image: none; }

#lg-gallery.show-after-load .lg-slide > * {
  opacity: 0; }

#lg-gallery.show-after-load .lg-slide.complete > * {
  opacity: 1; }

#lg-slider.slide .lg-slide, #lg-slider.use-left .lg-slide {
  position: absolute;
  opacity: 0.4; }

#lg-slider.fade-m .lg-slide {
  position: absolute;
  left: 0;
  opacity: 0; }

#lg-slider.animate .lg-slide {
  position: absolute;
  left: 0; }

#lg-slider.fade-m .current {
  opacity: 1;
  z-index: 9; }

#lg-slider .lg-slide:before {
  content: "";
  display: inline-block;
  height: 50%;
  width: 1px;
  margin-right: -1px; }

#lg-slider.speed .lg-slide, #lg-slider.speed .current, #lg-slider.speed .prev-slide, #lg-slider.speed .next-slide {
  -webkit-transition-duration: inherit !important;
          transition-duration: inherit !important; }

#lg-slider.timing .lg-slide, #lg-slider.timing .current, #lg-slider.timing .prev-slide, #lg-slider.timing .next-slide {
  -webkit-transition-timing-function: inherit !important;
          transition-timing-function: inherit !important; }

#lg-slider .lg-slide img {
  display: inline-block;
  max-height: calc(100% - 7.5rem);
  max-width: calc(100% - 6.25rem);
  cursor: -moz-grabbing;
  cursor: grab;
  cursor: -webkit-grab;
  margin: 0;
  padding: 0;
  width: auto;
  height: auto;
  vertical-align: middle; }
  @media screen and (min-width: 78.75em) {
    #lg-slider .lg-slide img {
      max-height: calc(100% - 20.625rem);
      max-width: calc(100% - 20.625rem); } }

@-webkit-keyframes rightEnd {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  50% {
    -webkit-transform: translate3d(1.875rem, 0, 0);
            transform: translate3d(1.875rem, 0, 0); }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); } }

@keyframes rightEnd {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  50% {
    -webkit-transform: translate3d(1.875rem, 0, 0);
            transform: translate3d(1.875rem, 0, 0); }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); } }

@-webkit-keyframes leftEnd {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  50% {
    -webkit-transform: translate3d(-1.875rem, 0, 0);
            transform: translate3d(-1.875rem, 0, 0); }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); } }

@keyframes leftEnd {
  0% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); }
  50% {
    -webkit-transform: translate3d(-1.875rem, 0, 0);
            transform: translate3d(-1.875rem, 0, 0); }
  100% {
    -webkit-transform: translate3d(0, 0, 0);
            transform: translate3d(0, 0, 0); } }

.lg-slide .object.right-end {
  -webkit-animation: rightEnd 0.2s;
  animation: rightEnd 0.2s;
  position: relative; }

.lg-slide .object.left-end {
  -webkit-animation: leftEnd 0.2s;
  animation: leftEnd 0.2s;
  position: relative; }

/*lightGallery core*/
/*action*/
#lg-action {
  z-index: 9;
  -webkit-backface-visibility: hidden; }

#lg-action a.disabled {
  opacity: .6;
  cursor: default; }

#lg-action {
  position: fixed;
  display: block;
  width: 100%;
  height: 100%; }

#lg-action a {
  display: inline-block;
  cursor: pointer;
  position: absolute;
  padding: 0 12.5rem 0 1.25rem;
  height: 100%; }
  #lg-action a:before {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    width: 0.75rem;
    height: 0.75rem;
    margin-top: -0.375rem;
    border-width: 0.125rem;
    border-color: #fff;
    -webkit-transform: translateZ(0) rotate(45deg);
            transform: translateZ(0) rotate(45deg);
    -webkit-transition: border-color 0.2s ease;
            transition: border-color 0.2s ease;
    -webkit-transform-origin: 50% 50%;
        -ms-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; }

#lg-action a:hover:before,
#lg-action a:focus:before {
  border-color: #666666; }

#lg-prev {
  left: 0; }
  #lg-prev:before {
    left: 1.25rem;
    border-bottom-style: solid;
    border-left-style: solid; }
    @media screen and (min-width: 78.75em) {
      #lg-prev:before {
        left: 5rem; } }

#lg-next {
  right: 0; }
  #lg-next:before {
    right: 1.25rem;
    border-top-style: solid;
    border-right-style: solid; }
    @media screen and (min-width: 78.75em) {
      #lg-next:before {
        right: 5rem; } }

/*action*/
/*counter*/
/*lightGallery Thumb*/
/*lightGallery Thumb*/
/*lightGallery Video*/
/*lightGallery Video*/
/*lightGallery Close*/
#lg-close {
  position: absolute;
  right: 0.5rem;
  bottom: 0.5rem;
  cursor: pointer;
  z-index: 100;
  padding: 1.25rem; }
  @media screen and (min-width: 78.75em) {
    #lg-close {
      padding: 5rem; } }
  #lg-close:before,
  #lg-close:after {
    content: '';
    position: absolute;
    width: 1.25rem;
    height: 0.125rem;
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%) rotate(0deg);
        -ms-transform: translate(-50%, -50%) rotate(0deg);
            transform: translate(-50%, -50%) rotate(0deg);
    background: #fff; }
  #lg-close:before {
    -webkit-transform: translate(-50%, -50%) rotate(45deg);
        -ms-transform: translate(-50%, -50%) rotate(45deg);
            transform: translate(-50%, -50%) rotate(45deg); }
  #lg-close:after {
    -webkit-transform: translate(-50%, -50%) rotate(-45deg);
        -ms-transform: translate(-50%, -50%) rotate(-45deg);
            transform: translate(-50%, -50%) rotate(-45deg); }

img, video, audio, iframe, object {
  display: block;
  margin: 0 auto;
  max-width: 100%;
  height: auto; }

.gm-style img, img[width], img[height] {
  /* [2] */
  max-width: none; }

/*# sourceMappingURL=data:application/json;base64, */