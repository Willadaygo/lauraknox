@charset "UTF-8";
/*------------------------------------*    #PULLING IN CONTENTS
\*------------------------------------*/
/*------------------------------------*  #DEBUG
\*------------------------------------*/
/*
    pesticide v0.1.0 . @mrmrs . MIT
*/
/**
 * #SETTINGS
 */
/*!
 * CTC - COTTON THOMPSON COLE
 * Author: Will Russell, 
 *         Ragged Edge
 */
/*------------------------------------*    #GLOBAL TOOLS
\*------------------------------------*/
/*------------------------------------*    #GLOBAL
\*------------------------------------*/
/*------------------------------------*    #COLORS
\*------------------------------------*/
/*------------------------------------*    #SETTINGS-RESPONSIVE
\*------------------------------------*/
/**
 * #TOOLS
 */
/*------------------------------------*    #FUNCTIONS
\*------------------------------------*/
/*------------------------------------*    #MIXINS
\*------------------------------------*/
/*  #Font face mixin
--------------------------------------*/
/*  #Responsive breakpoints mixin
--------------------------------------*/
/*  #Size helper
--------------------------------------*/
/*  #placeholder helper
--------------------------------------*/
/**
 * #GENERIC
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 0; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

:root {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%; }

input[type="number"] {
  width: auto; }

input[type="search"] {
  -webkit-appearance: textfield; }
  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

textarea {
  resize: vertical; }

@media screen {
  [hidden~="screen"] {
    display: inherit; }
  [hidden~="screen"]:not(:active):not(:focus):not(:target) {
    clip: rect(0 0 0 0) !important;
    position: absolute !important; } }

/*------------------------------------*    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr, button {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/**
 * Media fix
 */
audio,
canvas,
iframe,
img,
video,
svg {
  vertical-align: middle; }

img {
  max-width: 100%;
  height: auto; }
  img[src*=".svg"] {
    width: 100% \9; }

_::-ms-reveal,
img[src*=".svg"] {
  width: 100%; }

a img {
  border: none; }

/*------------------------------------*    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/*------------------------------------*    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p,
hr,
table,
fieldset,
pre,
.l-margin-top {
  margin-top: 1.25rem; }

/**
 * #BASE
 */
/*------------------------------------*    #PAGE
\*------------------------------------*/
/*------------------------------------*    #PAGE
\*------------------------------------*/
html {
  background-color: #fff;
  color: #000;
  overflow-y: scroll;
  min-height: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeSpeed; }
  @media screen and (min-width: 116.25em) {
    html {
      font-size: 120%; } }

body {
  font-family: "freight-text-pro", serif;
  font-weight: 400; }

.page--styleguide {
  background: black; }
  .page--styleguide ::-moz-selection {
    background: #fff;
    color: #000; }
  .page--styleguide ::selection {
    background: #fff;
    color: #000; }

.site__inner {
  padding-top: 16.875rem; }

/*------------------------------------*    #TYPE
\*------------------------------------*/
/**
 * Headings 1–6.
 */
h1, .t-alpha,
h2, .t-beta,
h3, .t-gamma,
h4, .t-delta {
  font-weight: 700;
  text-rendering: optimizeLegibility; }

h1, .t-alpha {
  font-size: 1.375rem;
  line-height: 2.1875rem;
  font-weight: 600;
  letter-spacing: 0.02em;
  text-transform: uppercase; }

h2, .t-beta {
  font-size: 1.125rem;
  line-height: 1.625rem;
  letter-spacing: 0.2em;
  text-transform: uppercase; }

/**
 * Paragraphs.
 */
p, .p {
  font-size: 1.25rem;
  line-height: 1.75rem;
  letter-spacing: 0.02em; }

.t-lede {
  font-size: 1.875rem;
  line-height: 2.375rem;
  letter-spacing: 0.02em; }

/**
 * Emboldened elements.
 */
strong, b, em, dt {
  font-weight: 700; }

/**
 * Horizontal rules.
 */
hr {
  border: none;
  border-top: 0.0625rem solid #000;
  margin: 2.5rem auto; }
  @media screen and (min-width: 50em) {
    hr {
      margin: 3.75rem auto; } }

/**
 * Selection rules.
 */
::-moz-selection {
  background: #000;
  color: #fff; }
::selection {
  background: #000;
  color: #fff; }

/*------------------------------------*    #LINKS
\*------------------------------------*/
a {
  color: inherit;
  font-size: inherit;
  line-height: inherit; }
  a,
  a:hover,
  a:active,
  a:focus {
    outline: none;
    text-decoration: none; }

.link-subtle a {
  border-bottom: 0.0625rem solid transparent; }
  .link-subtle a:hover {
    border-bottom: 0.0625rem solid; }

/*------------------------------------*    #SVGs
\*------------------------------------*/
svg {
  display: inline-block;
  vertical-align: top; }

.s-logo {
  width: 13.75rem;
  height: 1rem;
  fill: #000; }

.s-logo-small {
  -webkit-transition: 200ms ease;
          transition: 200ms ease;
  width: 3.75rem;
  height: 3.75rem;
  fill: #000; }

/*------------------------------------*    #FLEXBOX
\*------------------------------------*/
.flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-flex-wrap: no-wrap;
      -ms-flex-wrap: no-wrap;
          flex-wrap: no-wrap;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-align-content: stretch;
      -ms-flex-line-pack: stretch;
          align-content: stretch; }

.flex__item {
  -webkit-box-ordinal-group: 1;
  -webkit-order: 0;
      -ms-flex-order: 0;
          order: 0;
  -webkit-box-flex: 0;
  -webkit-flex: 0 1 auto;
      -ms-flex: 0 1 auto;
          flex: 0 1 auto;
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center; }

/**
 * #OBJECTS
 */
/*------------------------------------*    #PAGE LOADER
\*------------------------------------*/
/*------------------------------------*  #WRAPPERS
\*------------------------------------*/
.wrapper {
  margin: 0 auto;
  padding-right: 1.25rem;
  padding-left: 1.25rem; }

.wrapper--grid {
  padding-right: 0;
  padding-left: 1.25rem; }

/*------------------------------------*    #BUTTONS
\*------------------------------------*/
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 * 7. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 0.6875em 3.125em 0.675em;
  /* [7] */
  max-width: 23.75rem;
  background-color: #000;
  border: none;
  /* [4] */
  border-radius: 0;
  font-size: 2.75rem;
  line-height: normal;
  text-decoration: none;
  color: #fff;
  -webkit-transition: 0.2s cubic-bezier(0.165, 0.84, 0.44, 1);
          transition: 0.2s cubic-bezier(0.165, 0.84, 0.44, 1); }

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*------------------------------------*    #LISTS
\*------------------------------------*/
.list {
  margin: 0;
  padding: 0;
  list-style: none; }

/*------------------------------------*    #MEDIA
\*------------------------------------*/
audio,
canvas,
img,
video {
  vertical-align: middle; }

a img {
  border: none; }

.media {
  position: relative;
  padding-top: 30px;
  padding-bottom: 56.25%;
  height: 0;
  height: auto;
  max-width: 100%;
  margin-bottom: 1em;
  overflow: hidden; }

.media iframe,
.media object,
.media embed,
.media video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  border: 0;
  outline: none;
  background-color: transparent; }

/**
 * #COMPONENTS
 */
/*------------------------------------*  #HEADER
\*------------------------------------*/
.header {
  position: fixed;
  top: 0;
  z-index: 10;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  height: 12.5rem;
  background-color: transparent;
  -webkit-transition: 200ms ease;
          transition: 200ms ease;
  overflow: hidden; }
  .header.is-smaller {
    height: 3.75rem;
    background-color: #000;
    color: #fff; }
    .header.is-smaller .s-logo-small {
      width: 1.8125rem;
      height: 1.8125rem;
      fill: #fff; }
    .header.is-smaller .s-logo {
      fill: #fff; }

.logo {
  display: inline-block;
  -webkit-transition: .2s ease;
          transition: .2s ease; }

.logo--small {
  position: relative;
  left: -0.625rem; }

.nav__item {
  display: inline-block;
  margin-top: 0; }
  .nav__item a {
    padding: 1.25rem; }

/*------------------------------------*  #FOOTER
\*------------------------------------*/
/*------------------------------------*  #GALLERY
\*------------------------------------*/
.gallery img {
  width: 100%; }

.gallery__item,
.gallery__item-sizer {
  width: calc(50% - 20px); }
  @media screen and (min-width: 50em) {
    .gallery__item,
    .gallery__item-sizer {
      width: calc(25% - 20px); } }
  @media screen and (min-width: 116.25em) {
    .gallery__item,
    .gallery__item-sizer {
      width: calc(16.666% - 20px); } }

.gallery__item {
  margin-bottom: 20px; }

.gallery__featured {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% - 20px); }
  @media screen and (min-width: 50em) {
    .gallery__featured {
      width: calc(50% - 20px); } }
  .gallery__featured img {
    margin-bottom: 20px; }

/**
 * #THEMES
 */
.styleguide {
  padding-top: 3.125rem;
  padding-bottom: 6.25rem; }
  .styleguide .sg-subheading {
    margin-top: 0;
    font-size: 30px; }
  .styleguide .sg-title {
    font-size: 18px;
    line-height: 26px;
    border-bottom: 1px solid #b3b3b3;
    margin-top: 6.25rem; }
  .styleguide h1 + .sg-title {
    margin-top: 1.25rem; }

.palette {
  margin: 1.25rem 0 0;
  padding: 0; }

.palette__item {
  display: inline-block;
  margin: 0 2%; }

.palette__circle {
  display: block;
  width: 9.375rem;
  height: 9.375rem;
  border-radius: 50%; }
  .palette__circle--border {
    border: 0.0625rem solid; }

.palette__title {
  display: block; }

.sg-nav {
  position: fixed;
  right: 0;
  top: 11.875rem;
  z-index: 999; }
  .sg-nav li {
    background: #fff;
    border-top: 1px solid black;
    border-bottom: 1px solid black;
    border-left: 1px solid black;
    -webkit-transform: translate3d(3.75rem, 0, 0);
            transform: translate3d(3.75rem, 0, 0); }
    .sg-nav li:hover {
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0); }
    .sg-nav li + li {
      margin-top: -0.0625rem; }
  .sg-nav a {
    display: block;
    padding: 0.875rem 1.25rem 0.625rem; }

/**
 * #TRUMPS
 */
/*------------------------------------*    #SHOW-HIDE
\*------------------------------------*/
@media screen and (min-width: 30em) {
  .h-small-up {
    display: none !important; } }

@media screen and (min-width: 50em) {
  .h-med-up {
    display: none !important; } }

@media screen and (min-width: 78.75em) {
  .h-large-up {
    display: none; } }

@media screen and (max-width: 29.9375em) {
  .h-small-down {
    display: none !important; } }

@media screen and (max-width: 49.9375em) {
  .h-med-down {
    display: none !important; } }

@media screen and (max-width: 78.6875em) {
  .h-large-down {
    display: none; } }

/*------------------------------------*    #HELPERS
\*------------------------------------*/
.l-white {
  background-color: #fff !important; }

.l-white--hover:hover {
  background-color: #fff !important; }

.t-white {
  color: #fff !important; }

.t-white--hover:hover {
  color: #fff !important; }

.f-white svg {
  fill: #fff !important; }

.f-white--hover:hover svg {
  fill: #fff !important; }

.l-black {
  background-color: #000 !important; }

.l-black--hover:hover {
  background-color: #000 !important; }

.t-black {
  color: #000 !important; }

.t-black--hover:hover {
  color: #000 !important; }

.f-black svg {
  fill: #000 !important; }

.f-black--hover:hover svg {
  fill: #000 !important; }

.l-grey--light {
  background-color: #b3b3b3 !important; }

.l-grey--light--hover:hover {
  background-color: #b3b3b3 !important; }

.t-grey--light {
  color: #b3b3b3 !important; }

.t-grey--light--hover:hover {
  color: #b3b3b3 !important; }

.f-grey--light svg {
  fill: #b3b3b3 !important; }

.f-grey--light--hover:hover svg {
  fill: #b3b3b3 !important; }

.l-grey--dark {
  background-color: #666666 !important; }

.l-grey--dark--hover:hover {
  background-color: #666666 !important; }

.t-grey--dark {
  color: #666666 !important; }

.t-grey--dark--hover:hover {
  color: #666666 !important; }

.f-grey--dark svg {
  fill: #666666 !important; }

.f-grey--dark--hover:hover svg {
  fill: #666666 !important; }

.t-align-center {
  text-align: center; }

.t-align-right {
  text-align: right; }

@media screen and (min-width: 50em) {
  .t-align-ltr {
    text-align: right; } }

.l-center {
  margin-left: auto;
  margin-right: auto; }

.l-clear {
  clear: both; }

.l-cf, .palette {
  *zoom: 1; }
  .l-cf:before, .palette:before, .l-cf:after, .palette:after {
    content: " ";
    display: table; }
  .l-cf:after, .palette:after {
    clear: both; }

.l-right {
  float: right; }

.z-level-1 {
  z-index: 10; }

.z-level-2 {
  z-index: 20; }

.l-dis-block {
  display: block; }

.l-dis-inline {
  display: inline; }

.l-relative {
  position: relative; }

.l-abs-center {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.t-hide {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden; }

/**
 * Font helpers.
 */
/*------------------------------------*    #SPACING
\*------------------------------------*/
.l-padding {
  padding: 1.25rem; }
  @media screen and (min-width: 50em) {
    .l-padding {
      padding: 2.5rem; } }

@media screen and (min-width: 78.75em) {
  .l-padding-right {
    padding-right: 5rem; } }

.l-margin-top {
  margin-top: 1.25rem !important; }

.l-margin-top--large {
  margin-top: 2.5rem !important; }

.l-margin-top--huge {
  margin-top: 3.75rem !important; }

.l-margin-bottom {
  margin-bottom: 1.25rem !important; }

.l-margin-bottom--large {
  margin-bottom: 2.5rem !important; }

.l-margin-bottom--huge {
  margin-bottom: 3.75rem !important; }

.l-margin-top--none {
  margin-top: 0 !important; }

/**
 * #VENDOR
 */
/*------------------------------------*    #IMAGE SETTINGS
\*------------------------------------*/
/** /font-icons if you are not using font icons you can just remove this part/**/
@font-face {
  font-family: 'Slide-icons';
  src: url("../fonts/Slide-icons.eot"); }

@font-face {
  font-family: 'Slide-icons';
  src: url(data:application/font-woff;charset=utf-8;base64,d09GRk9UVE8AAAWcAAsAAAAACSgAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABDRkYgAAABCAAAAm4AAAQxqzjSYEZGVE0AAAN4AAAAGgAAABxmWaSOR0RFRgAAA5QAAAAdAAAAIAAzAARPUy8yAAADtAAAAEsAAABgL/bcQGNtYXAAAAQAAAAAPQAAAVLgL/LNaGVhZAAABEAAAAAuAAAANv3vdhloaGVhAAAEcAAAAB4AAAAkBBD/5GhtdHgAAASQAAAAEgAAABIFOwBxbWF4cAAABKQAAAAGAAAABgAGUABuYW1lAAAErAAAAOEAAAGw7pftcnBvc3QAAAWQAAAADAAAACAAAwAAeJx9VE1oE1EQnpfsJutmSWNMQoUoWxB/qmIKnkKJWKvXQlOwhx5E7SEo9WCEHNKAJqVbn8RLzvEgKEUPCgoiIi3YHkWw2mO9CBb8O1SzurXjvLfrJiqEhXkzwzffm/nee8tAUYAxZuQvFs5PHi6cuzR1GVgAGORsM2D3Be1ehRtBbii7ddiZjyPnvmOE+QW7YRfVNNzpSQPE0vBwexqMtNIbh7Dg0KAHUrAL9sARyF6ZKpzKZDK0nMwMHHeXIXc54S7DHU109gPAZpnF5th1xiEkiANgsFpgNDATPB3ldlHZbNiNcBTZ/JNRZBPFZ0nE6mw/GT6MUC6tiPCgihA6Vkb8sXCNI35bGxRuTcYa4vqZIWlUP1sVoCx3Yyqd1gTNIUH4RhJ6rILAxw9yN/bwghVSt56rLoCyFY6gmy8kwENJwjYrlItPVauOuDWyhqDEzlKFIuvIIrAHfTJbr2uSWpgFOVvFHVDQc5dftK751P3CeyuNp8Uf/DL3tal5rFKLuiX2MxGdL00azJHKOWLcrZF3MmtZWhThNRWwx62XSYTF/d8Rc6sR2iFyNYS4MWNSzaeJA+RWfkqjCYBO5tV71bIkjTssUVe5bykrhrXqWqnZ1m9a6rfk61emfu+Px8iIA8zf/SrDNr4s8csd+Gbzn+mXOtWK3rPHkqbeGkuZuvNIGudo9wRdvDkald0Yj9HFy89vtvsgjw7/Pxm9Kf+SEfGj86HU/frlVn6RwgP7CLVRTZDCFZt6j99edcWGSPmz5h4BLO5d73bIzVL7OdTkc8j6O5MIdiPBkzcNnZ7zDvF/2OYkWvSFI78BSE0QpgAAeJxjYGBgZACCk535hiD6XIbUOhgNAD+3BfAAAHicY2BkYGDgA2IJBhBgYmAEQlYgZgHzGAAEgQA4AAAAeJxjYGZiYJzAwMrAwejDmMbAwOAOpb8ySDK0MDAwMbAyM8CBAILJEJDmmsLg8EDqAwPjg/8PGPQYHzAoNDAwMMIVKAAhIwATaAw5AHicY2BgYGaAYBkGRgYQ8AHyGMF8FgYDIM0BhEwgiQeyHxj+/wezpCAs+RcCjFBdYMDIxoDMHZEAAP1aCcoAAAB4nGNgZGBgAGLNvbqy8fw2Xxm4mRhA4FyG1DoE/f8BEwPjAyCXgwEsDQAB0gmnAAB4nGNgZGBgfPD/AYMeEwMDwz8GIAkUQQHMAG3nA/YAAAIAAAAAAAAAAgAAUQClACAAlgAAAABQAAAGAAB4nI2PMW7CQBBFn8FGIkQpo5RbIFHZsjciEhyAMg0SFwALrYS8kuEMOQLH4BgcgGPkAKnz7UxBkYKVVvPmz5/ZWeCZMwndSZjwZjwgozQeMuPLOJXnapyJv41HTJIXOZN0LOW17+p4wBNT4yGffBin8lyMM/HNeCT+Yc2BwI6aXHFLpOEI60PY1XnYxkbJnW7Kqs9PfWzZq9vhKfQPx1L3/6l/Nc9c6kLXy1/xrnGxOa1iu6+dL0q3dHevK/PzfJH7spLxkW03qrZSQ191eqHbi03dHkNsXFWUD835BcvqQqwAAAB4nGNgZsALAAB9AAQ=) format("woff"), url(data:application/x-font-ttf;charset=utf-8;base64,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) format("truetype");
  font-weight: normal;
  font-style: normal; }

[data-icon]:before {
  font-family: 'Slide-icons';
  content: attr(data-icon);
  speak: none;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

/** / End of font-icons /**/
.light-gallery {
  overflow: hidden; }

#lg-outer {
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: 20;
  overflow: hidden;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  opacity: 1;
  -webkit-transition: opacity 0.35s ease;
          transition: opacity 0.35s ease;
  background-color: rgba(255, 255, 255, 0.9); }

#lg-outer .lg-slide {
  position: relative; }

/*lightGallery starting effects*/
#lg-gallery.opacity {
  opacity: 1;
  -webkit-transition: opacity 1s ease 0s;
          transition: opacity 1s ease 0s; }

#lg-gallery.opacity .thumb-cont {
  opacity: 1; }

#lg-gallery.fade-m {
  opacity: 0;
  -webkit-transition: opacity 0.5s ease 0s;
          transition: opacity 0.5s ease 0s; }

/*lightGallery starting effects*/
/*lightGallery core*/
#lg-gallery {
  height: 100%;
  opacity: 0;
  width: 100%;
  position: relative;
  -webkit-transition: opacity 1s ease 0s;
          transition: opacity 1s ease 0s; }

/**/
#lg-slider {
  height: 100%;
  left: 0;
  top: 0;
  width: 100%;
  position: absolute;
  white-space: nowrap; }

/**/
#lg-slider .lg-slide {
  display: inline-block;
  height: 100%;
  text-align: center;
  width: 100%; }

#lg-slider .lg-slide.complete {
  background-image: none; }

#lg-gallery.show-after-load .lg-slide > * {
  opacity: 0; }

#lg-gallery.show-after-load .lg-slide.complete > * {
  opacity: 1; }

#lg-slider.slide .lg-slide, #lg-slider.use-left .lg-slide {
  position: absolute;
  opacity: 0.4; }

#lg-slider.fade-m .lg-slide {
  position: absolute;
  left: 0;
  opacity: 0; }

#lg-slider.animate .lg-slide {
  position: absolute;
  left: 0; }

#lg-slider.fade-m .current {
  opacity: 1;
  z-index: 9; }

#lg-slider .lg-slide:before {
  content: "";
  display: inline-block;
  height: 50%;
  width: 1px;
  margin-right: -1px; }

#lg-slider.speed .lg-slide, #lg-slider.speed .current, #lg-slider.speed .prev-slide, #lg-slider.speed .next-slide {
  -webkit-transition-duration: inherit !important;
          transition-duration: inherit !important; }

#lg-slider.timing .lg-slide, #lg-slider.timing .current, #lg-slider.timing .prev-slide, #lg-slider.timing .next-slide {
  -webkit-transition-timing-function: inherit !important;
          transition-timing-function: inherit !important; }

#lg-slider .lg-slide img {
  display: inline-block;
  max-height: 100%;
  max-width: 100%;
  cursor: -moz-grabbing;
  cursor: grab;
  cursor: -webkit-grab;
  margin: 0;
  padding: 0;
  width: auto;
  height: auto;
  vertical-align: middle; }

#lg-gallery .thumb-cont .thumb-inner {
  -webkit-transition: -webkit-transform 1s cubic-bezier(0, 0, 0.25, 1) 0s;
          transition: transform 1s cubic-bezier(0, 0, 0.25, 1) 0s; }

@-webkit-keyframes rightEnd {
  0% {
    left: 0; }
  50% {
    left: -30px; }
  100% {
    left: 0; } }

@keyframes rightEnd {
  0% {
    left: 0; }
  50% {
    left: -30px; }
  100% {
    left: 0; } }

@-webkit-keyframes leftEnd {
  0% {
    left: 0; }
  50% {
    left: 30px; }
  100% {
    left: 0; } }

@keyframes leftEnd {
  0% {
    left: 0; }
  50% {
    left: 30px; }
  100% {
    left: 0; } }

.lg-slide .object.right-end {
  -webkit-animation: rightEnd 0.3s;
  animation: rightEnd 0.3s;
  position: relative; }

.lg-slide .object.left-end {
  -webkit-animation: leftEnd 0.3s;
  animation: leftEnd 0.3s;
  position: relative; }

/*lightGallery core*/
/*action*/
#lg-action {
  z-index: 9;
  -webkit-backface-visibility: hidden; }

#lg-action a.disabled {
  opacity: .6;
  cursor: default; }

#lg-action a:hover,
#lg-action a:focus {
  opacity: .6; }

#lg-action {
  position: fixed;
  display: block;
  width: 100%;
  height: 100%; }

#lg-action a {
  display: inline-block;
  cursor: pointer;
  position: absolute;
  top: 50%;
  padding: 0.9375rem; }
  #lg-action a:before {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    width: 1.375rem;
    height: 1.375rem;
    margin-top: -0.6875rem;
    border-width: 0.125rem;
    border-color: #000;
    -webkit-transform: translateZ(0) rotate(45deg);
            transform: translateZ(0) rotate(45deg);
    -webkit-transform-origin: 50% 50%;
        -ms-transform-origin: 50% 50%;
            transform-origin: 50% 50%;
    -webkit-backface-visibility: hidden;
            backface-visibility: hidden; }

#lg-prev {
  left: 1.875rem; }
  #lg-prev:before {
    left: 25%;
    border-bottom-style: solid;
    border-left-style: solid; }

#lg-next {
  right: 1.875rem; }
  #lg-next:before {
    right: 25%;
    border-top-style: solid;
    border-right-style: solid; }

/*action*/
/*counter*/
#lg-counter {
  bottom: 52px;
  text-align: center;
  width: 100%;
  position: absolute;
  z-index: 9;
  color: #FFFFFF; }

/*lightGallery Thumb*/
#lg-gallery .thumb-cont {
  position: absolute;
  bottom: 0;
  width: 100%;
  box-sizing: border-box;
  background-color: #000000;
  -webkit-transition: max-height 0.4s ease-in-out;
          transition: max-height 0.4s ease-in-out;
  z-index: 9;
  max-height: 0;
  opacity: 0; }

#lg-gallery.open .thumb-cont {
  max-height: 350px; }

#lg-gallery .thumb-cont .thumb-inner {
  margin-left: -12px;
  padding: 12px;
  max-height: 290px;
  overflow-y: auto;
  box-sizing: content-box; }

#lg-gallery .thumb-cont .thumb-info {
  background-color: #333;
  padding: 7px 20px; }

#lg-gallery .thumb-cont .thumb-info .count {
  color: #ffffff;
  font-weight: bold;
  font-size: 12px; }

#lg-gallery .thumb-cont .thumb-info .close {
  color: #FFFFFF;
  display: block;
  float: right !important;
  width: 28px;
  position: relative;
  height: 28px;
  border-radius: 2px;
  margin-top: -4px;
  background-color: #000;
  background-color: rgba(0, 0, 0, 0.65);
  -webkit-transition: background-color 0.3s ease 0s;
          transition: background-color 0.3s ease 0s;
  z-index: 1090;
  cursor: pointer; }

#lg-gallery .thumb-cont .thumb-info .close i:after {
  left: 6px;
  position: absolute;
  top: 4px; }

#lg-gallery .thumb-cont .thumb-info .close i:after, #lg-close:after {
  content: "\e01a";
  font-family: 'Slide-icons';
  font-style: normal;
  font-size: 16px; }

#lg-gallery .thumb-cont .thumb-info .close:hover {
  text-decoration: none;
  background-color: #000;
  background-color: black; }

#lg-gallery .thumb-cont .thumb {
  display: inline-block !important;
  vertical-align: middle;
  text-align: center;
  *display: inline;
  /* IE7 inline-block hack */
  *zoom: 1;
  margin-bottom: 4px;
  height: 50px;
  width: 50px;
  opacity: 0.6;
  filter: alpha(opacity=60);
  overflow: hidden;
  border-radius: 3px;
  cursor: pointer;
  -webkit-transition: border-color linear 0.2s, opacity linear 0.2s;
          transition: border-color linear 0.2s, opacity linear 0.2s; }

@media (min-width: 800px) {
  #lg-gallery .thumb-cont .thumb {
    width: 94px;
    height: 94px; } }

#lg-gallery .thumb-cont .thumb > img {
  height: auto;
  max-width: 100%; }

#lg-gallery .thumb-cont .thumb.active, #lg-gallery .thumb-cont .thumb:hover {
  opacity: 1;
  border-color: #ffffff; }

/*lightGallery Thumb*/
/*lightGallery Video*/
/*lightGallery Video*/
/*lightGallery Close*/
#lg-close {
  color: #FFFFFF;
  height: 28px;
  position: absolute;
  right: 20px;
  top: 20px;
  width: 28px;
  z-index: 1090;
  cursor: pointer;
  background-color: #000;
  border-radius: 2px;
  background-color: #000;
  background-color: rgba(0, 0, 0, 0.65);
  -webkit-transition: background-color 0.3s ease;
          transition: background-color 0.3s ease;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }

#lg-close:after {
  position: absolute;
  right: 6px;
  top: 3px; }

#lg-close:hover {
  text-decoration: none;
  background-color: #000; }

img, video, audio, iframe, object {
  display: block;
  margin: 0 auto;
  max-width: 100%;
  height: auto; }

.gm-style img, img[width], img[height] {
  /* [2] */
  max-width: none; }

/*# sourceMappingURL=data:application/json;base64, */