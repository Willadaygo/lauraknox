@charset "UTF-8";
/*------------------------------------*    #PULLING IN CONTENTS
\*------------------------------------*/
/*------------------------------------*  #DEBUG
\*------------------------------------*/
/*
    pesticide v0.1.0 . @mrmrs . MIT
*/
/**
 * #SETTINGS
 */
/*!
 * CTC - COTTON THOMPSON COLE
 * Author: Will Russell, 
 *         Ragged Edge
 */
/*------------------------------------*    #GLOBAL TOOLS
\*------------------------------------*/
/*------------------------------------*    #GLOBAL
\*------------------------------------*/
/*------------------------------------*    #COLORS
\*------------------------------------*/
/*------------------------------------*    #SETTINGS-RESPONSIVE
\*------------------------------------*/
/**
 * #TOOLS
 */
/*------------------------------------*    #FUNCTIONS
\*------------------------------------*/
/*------------------------------------*    #MIXINS
\*------------------------------------*/
/*  #Font face mixin
--------------------------------------*/
/*  #Responsive breakpoints mixin
--------------------------------------*/
/*  #Size helper
--------------------------------------*/
/*  #placeholder helper
--------------------------------------*/
/**
 * #GENERIC
 */
/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"], input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 0; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

:root {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
      -ms-text-size-adjust: 100%;
          text-size-adjust: 100%; }

input[type="number"] {
  width: auto; }

input[type="search"] {
  -webkit-appearance: textfield; }
  input[type="search"]::-webkit-search-cancel-button,
  input[type="search"]::-webkit-search-decoration {
    -webkit-appearance: none; }

[unselectable] {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

textarea {
  resize: vertical; }

@media screen {
  [hidden~="screen"] {
    display: inherit; }
  [hidden~="screen"]:not(:active):not(:focus):not(:target) {
    clip: rect(0 0 0 0) !important;
    position: absolute !important; } }

/*------------------------------------*    #RESET
\*------------------------------------*/
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr, button {
  margin: 0;
  padding: 0; }

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title],
dfn[title] {
  cursor: help; }

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none; }

/**
 * Apply faux underlines to inserted text via `border-bottom`.
 */
ins {
  border-bottom: 1px solid; }

/**
 * Media fix
 */
audio,
canvas,
iframe,
img,
video,
svg {
  vertical-align: middle; }

img {
  max-width: 100%;
  height: auto; }
  img[src*=".svg"] {
    width: 100% \9; }

_::-ms-reveal,
img[src*=".svg"] {
  width: 100%; }

a img {
  border: none; }

/*------------------------------------*    #BOX-SIZING
\*------------------------------------*/
/**
 * Set the global `box-sizing` state to `border-box`.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box; }

*,
*:before,
*:after {
  box-sizing: inherit; }

/*------------------------------------*    #SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p,
hr,
table,
fieldset,
pre,
.l-margin-top {
  margin-top: 1.25rem; }

/**
 * #BASE
 */
/*------------------------------------*    #PAGE
\*------------------------------------*/
/*------------------------------------*    #PAGE
\*------------------------------------*/
html {
  background-color: white;
  color: black;
  overflow-y: scroll;
  min-height: 100%;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  text-rendering: optimizeSpeed; }

body {
  font-family: "freight-text-pro", serif;
  font-weight: 400; }

/*------------------------------------*    #TYPE
\*------------------------------------*/
/**
 * Headings 1–6.
 */
h1, .t-alpha,
h2, .t-beta,
h3, .t-gamma,
h4, .t-delta {
  font-weight: 700;
  text-rendering: optimizeLegibility; }

h1, .t-alpha {
  font-size: 1.4375rem;
  line-height: 1.875rem;
  letter-spacing: -0.01em; }
  @media screen and (min-width: 50em) {
    h1, .t-alpha {
      font-size: 2.5rem;
      line-height: 2.875rem; } }

h2, .t-beta,
h3, .t-gamma {
  font-size: 1.0625rem;
  line-height: 1.5625rem;
  letter-spacing: -0.01em; }
  @media screen and (min-width: 50em) {
    h2, .t-beta,
    h3, .t-gamma {
      font-size: 1.5rem;
      line-height: 1.75rem; } }

h4, .t-delta {
  letter-spacing: 0;
  font-size: 1.0625rem;
  line-height: 1.5rem; }

/**
 * Paragraphs.
 */
/**
 * Emboldened elements.
 */
strong, b, em, dt {
  font-weight: normal; }

/**
 * Horizontal rules.
 */
hr {
  border: none;
  border-top: 0.0625rem solid black;
  margin: 2.5rem auto; }
  @media screen and (min-width: 50em) {
    hr {
      margin: 3.75rem auto; } }

/**
 * Selection rules.
 */
::-moz-selection {
  text-shadow: none;
  background: black;
  color: #fff; }
::selection {
  text-shadow: none;
  background: black;
  color: #fff; }

/*------------------------------------*    #LINKS
\*------------------------------------*/
a {
  color: inherit;
  font-size: inherit;
  line-height: inherit; }
  a,
  a:hover,
  a:active,
  a:focus {
    outline: none;
    text-decoration: none; }

.link-subtle a {
  border-bottom: 0.0625rem solid transparent; }
  .link-subtle a:hover {
    border-bottom: 0.0625rem solid; }

/*------------------------------------*    #SVGs
\*------------------------------------*/
svg {
  display: inline-block; }

/*------------------------------------*    #GRID
\*------------------------------------*/
/*------------------------------------*    #FLEXBOX
\*------------------------------------*/
.flexbox {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
      -ms-flex-direction: row;
          flex-direction: row;
  -webkit-box-align: stretch;
  -webkit-align-items: stretch;
      -ms-flex-align: stretch;
          align-items: stretch;
  -webkit-flex-wrap: no-wrap;
      -ms-flex-wrap: no-wrap;
          flex-wrap: no-wrap;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  -webkit-align-content: stretch;
      -ms-flex-line-pack: stretch;
          align-content: stretch; }

.flex__item {
  -webkit-box-ordinal-group: 1;
  -webkit-order: 0;
      -ms-flex-order: 0;
          order: 0;
  -webkit-flex-shrink: 1;
      -ms-flex-negative: 1;
          flex-shrink: 1;
  -webkit-box-flex: 0;
  -webkit-flex-grow: 0;
      -ms-flex-positive: 0;
          flex-grow: 0;
  -webkit-flex-basis: auto;
      -ms-flex-preferred-size: auto;
          flex-basis: auto;
  -webkit-align-self: stretch;
      -ms-flex-item-align: stretch;
          align-self: stretch; }

.item,
.item-sizer {
  width: calc(50% - 1.25rem); }
  @media screen and (min-width: 50em) {
    .item,
    .item-sizer {
      width: calc(25% - 1.25rem); } }
  @media screen and (min-width: 116.25em) {
    .item,
    .item-sizer {
      width: calc(16.666% - 1.25rem); } }

.item {
  margin-bottom: 1.25rem; }
  .item img {
    width: 100%; }

.stamp {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100% - 1.25rem); }
  @media screen and (min-width: 50em) {
    .stamp {
      width: calc(50% - 1.25rem); } }
  .stamp img {
    width: 100%;
    margin-bottom: 1.25rem; }

/**
 * #OBJECTS
 */
/*------------------------------------*    #PAGE LOADER
\*------------------------------------*/
.switch {
  -webkit-transition: 165ms cubic-bezier(0.86, 0, 0.07, 1);
          transition: 165ms cubic-bezier(0.86, 0, 0.07, 1);
  -webkit-transition-property: opacity, -webkit-transform;
          transition-property: opacity, transform;
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
          transform: translate3d(0, 0, 0); }
  .switch.is-hidden {
    opacity: 0;
    -webkit-transform: translate3d(0, 2.5rem, 0);
            transform: translate3d(0, 2.5rem, 0); }

/*------------------------------------*  #WRAPPERS
\*------------------------------------*/
.wrapper {
  margin: 0 auto;
  padding-right: 1.25rem;
  padding-left: 1.25rem; }

.wrapper--grid {
  padding-right: 0;
  padding-left: 1.25rem; }

/*------------------------------------*    #BUTTONS
\*------------------------------------*/
/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 * 6. Fixes odd inner spacing in IE7.
 * 7. Subtract the border size from the padding value so that buttons do not
 *    grow larger as we add borders.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  font: inherit;
  /* [3] */
  text-align: center;
  /* [4] */
  margin: 0;
  /* [4] */
  cursor: pointer;
  /* [5] */
  overflow: visible;
  /* [6] */
  padding: 0.6875em 3.125em 0.675em;
  /* [7] */
  max-width: 23.75rem;
  background-color: black;
  border: none;
  /* [4] */
  border-radius: 0;
  font-size: 2.75rem;
  line-height: normal;
  text-decoration: none;
  color: white;
  -webkit-transition: 0.2s cubic-bezier(0.165, 0.84, 0.44, 1);
          transition: 0.2s cubic-bezier(0.165, 0.84, 0.44, 1); }

/**
 * Fix a Firefox bug whereby `input type="submit"` gains 2px extra padding.
 */
.btn::-moz-focus-inner {
  border: 0;
  padding: 0; }

/*------------------------------------*    #LISTS
\*------------------------------------*/
.list {
  margin: 0;
  padding: 0;
  list-style: none; }

/*------------------------------------*    #MEDIA
\*------------------------------------*/
.media-wrapper {
  width: 100%;
  height: 0;
  background-color: black;
  position: relative; }
  .media-wrapper--1by1 {
    padding-bottom: 100%; }
  .media-wrapper--4by3 {
    padding-bottom: 74.9%; }

.media {
  width: 100%;
  position: absolute;
  opacity: 1; }

/**
 * #COMPONENTS
 */
/*------------------------------------*  #HAMBURGER
\*------------------------------------*/
/*------------------------------------*  #HEADER
\*------------------------------------*/
/*------------------------------------*  #FOOTER
\*------------------------------------*/
/**
 * #THEMES
 */
.styleguide {
  padding-top: 3.125rem;
  padding-bottom: 6.25rem; }
  .styleguide .sg-subheading {
    margin-top: 0;
    font-size: 30px; }
  .styleguide .sg-title {
    font-size: 18px;
    line-height: 26px;
    border-bottom: 1px solid;
    margin-top: 6.25rem; }
  .styleguide h1 + .sg-title {
    margin-top: 1.25rem; }

.palette {
  margin: 1.25rem 0 0;
  padding: 0; }

.palette__item {
  display: inline-block;
  margin: 0 2%; }

.palette__circle {
  display: block;
  width: 9.375rem;
  height: 9.375rem;
  border-radius: 50%; }
  .palette__circle--border {
    border: 0.0625rem solid; }

.palette__title {
  display: block; }

.sg-nav {
  position: fixed;
  right: 0;
  top: 11.875rem;
  z-index: 999; }
  .sg-nav li {
    background: #fff;
    border-top: 1px solid black;
    border-bottom: 1px solid black;
    border-left: 1px solid black;
    -webkit-transform: translate3d(3.75rem, 0, 0);
            transform: translate3d(3.75rem, 0, 0);
    -webkit-transition: 165ms cubic-bezier(0.86, 0, 0.07, 1);
            transition: 165ms cubic-bezier(0.86, 0, 0.07, 1); }
    .sg-nav li:hover {
      -webkit-transform: translate3d(0, 0, 0);
              transform: translate3d(0, 0, 0); }
    .sg-nav li + li {
      margin-top: -0.0625rem; }
  .sg-nav a {
    display: block;
    padding: 0.875rem 1.25rem 0.625rem; }

/**
 * #TRUMPS
 */
/*------------------------------------*    #SHOW-HIDE
\*------------------------------------*/
@media screen and (min-width: 30em) {
  .h-small-up {
    display: none !important; } }

@media screen and (min-width: 50em) {
  .h-med-up {
    display: none !important; } }

@media screen and (min-width: 78.75em) {
  .h-large-up {
    display: none; } }

@media screen and (max-width: 29.9375em) {
  .h-small-down {
    display: none !important; } }

@media screen and (max-width: 49.9375em) {
  .h-med-down {
    display: none !important; } }

@media screen and (max-width: 78.6875em) {
  .h-large-down {
    display: none; } }

/*------------------------------------*    #HELPERS
\*------------------------------------*/
.l-white {
  background-color: white !important; }

.l-white--hover:hover {
  background-color: white !important; }

.t-white {
  color: white !important; }

.t-white--hover:hover {
  color: white !important; }

.f-white svg {
  fill: white !important; }

.f-white--hover:hover svg {
  fill: white !important; }

.l-black {
  background-color: black !important; }

.l-black--hover:hover {
  background-color: black !important; }

.t-black {
  color: black !important; }

.t-black--hover:hover {
  color: black !important; }

.f-black svg {
  fill: black !important; }

.f-black--hover:hover svg {
  fill: black !important; }

.t-align-center {
  text-align: center; }

.t-align-right {
  text-align: right; }

@media screen and (min-width: 50em) {
  .t-align-ltr {
    text-align: right; } }

.l-center {
  margin-left: auto;
  margin-right: auto; }

.l-clear {
  clear: both; }

.l-cf, .palette {
  *zoom: 1; }
  .l-cf:before, .palette:before, .l-cf:after, .palette:after {
    content: " ";
    display: table; }
  .l-cf:after, .palette:after {
    clear: both; }

.l-right {
  float: right; }

.z-level-1 {
  z-index: 10; }

.z-level-2 {
  z-index: 20; }

.l-dis-block {
  display: block; }

.l-relative {
  position: relative; }

.l-abs-center {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
      -ms-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%); }

.t-hide {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden; }

/**
 * Font helpers.
 */
/*------------------------------------*    #SPACING
\*------------------------------------*/
.l-padding {
  padding: 1.25rem; }
  @media screen and (min-width: 50em) {
    .l-padding {
      padding: 2.5rem; } }

@media screen and (min-width: 78.75em) {
  .l-padding-right {
    padding-right: 5rem; } }

.l-margin-top {
  margin-top: 1.25rem !important; }

.l-margin-top--large {
  margin-top: 2.5rem !important; }

.l-margin-top--huge {
  margin-top: 3.75rem !important; }

.l-margin-bottom {
  margin-bottom: 1.25rem !important; }

.l-margin-bottom--large {
  margin-bottom: 2.5rem !important; }

.l-margin-bottom--huge {
  margin-bottom: 3.75rem !important; }

.l-margin-top--none {
  margin-top: 0 !important; }

/**
 * #VENDOR
 */
/*------------------------------------*    #IMAGE SETTINGS
\*------------------------------------*/
.gallery img {
  cursor: -webkit-zoom-in;
  cursor: -moz-zoom-in; }

.blueimp-gallery,
.blueimp-gallery > .slides > .slide > .slide-content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden; }

.blueimp-gallery > .slides > .slide > .slide-content {
  margin: auto;
  width: auto;
  height: auto;
  max-width: calc(100% - 3.75rem);
  max-height: 100%;
  cursor: default;
  cursor: -webkit-grab;
  cursor: -moz-grab; }
  .blueimp-gallery > .slides > .slide > .slide-content:active {
    cursor: -webkit-grabbing;
    cursor: -moz-grabbing; }

.blueimp-gallery {
  position: fixed;
  z-index: 999999;
  overflow: hidden;
  background: rgba(255, 255, 255, 0.9);
  opacity: 0;
  display: none;
  direction: ltr;
  -ms-touch-action: none;
  touch-action: none; }

.blueimp-gallery-display {
  display: block;
  opacity: 1; }

.blueimp-gallery > .slides {
  position: relative;
  height: 100%;
  overflow: hidden;
  padding-top: 3.75rem;
  padding-bottom: 3.75rem; }

.blueimp-gallery > .slides > .slide {
  position: relative;
  float: left;
  height: 100%;
  text-align: center;
  -webkit-transition-timing-function: ease;
          transition-timing-function: ease; }

.blueimp-gallery,
.blueimp-gallery > .slides > .slide > .slide-content {
  -webkit-transition: opacity 0.2s ease;
          transition: opacity 0.2s ease; }

@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

@keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
            transform: rotate(0deg); }
  to {
    -webkit-transform: rotate(360deg);
            transform: rotate(360deg); } }

.blueimp-gallery > .slides > .slide-loading {
  background-image: url("/img/loading.gif");
  background-repeat: no-repeat;
  background-size: 5rem 0.625rem;
  background-position: center; }

.blueimp-gallery > .slides > .slide-loading > .slide-content {
  opacity: 0; }

.blueimp-gallery > .slides > .slide-error {
  background: url("/img/error.png") center no-repeat; }

.blueimp-gallery > .slides > .slide-error > .slide-content {
  display: none; }

@media screen and (min-width: 50em) {
  .blueimp-gallery > .prev,
  .blueimp-gallery > .next {
    position: absolute;
    top: 50%;
    margin-top: -2.5rem;
    left: 2.8125rem;
    text-decoration: none;
    opacity: 1;
    cursor: pointer;
    display: none;
    -webkit-transform: rotate(0deg) translate3d(0, 0, 0);
            transform: rotate(0deg) translate3d(0, 0, 0);
    background-image: url("/img/arrow-nav.svg");
    background-repeat: no-repeat;
    background-position: center;
    background-size: 3.125rem 0.6875rem;
    width: 3.125rem;
    height: 0.6875rem;
    padding: 2.5rem; }
  .blueimp-gallery > .next {
    left: auto;
    right: 2.8125rem; }
  .blueimp-gallery > .prev {
    -webkit-transform: rotate(180deg);
        -ms-transform: rotate(180deg);
            transform: rotate(180deg); } }

.blueimp-gallery > .title {
  position: absolute;
  bottom: 5%;
  left: 50%;
  margin: 0 40px 0 0;
  font-size: 20px;
  line-height: 30px;
  opacity: 0.8;
  display: none;
  -webkit-transform: translateX(-50%);
      -ms-transform: translateX(-50%);
          transform: translateX(-50%); }

.blueimp-gallery > .close {
  padding: 1.75rem 1.75rem 2.5rem 2.5rem;
  position: absolute;
  top: 0;
  right: 0;
  left: auto;
  text-decoration: none;
  cursor: pointer;
  opacity: 1; }
  @media screen and (min-width: 50em) {
    .blueimp-gallery > .close {
      padding: 1.75rem 3.75rem 2.5rem 2.5rem; } }

.blueimp-gallery > .prev:hover,
.blueimp-gallery > .next:hover,
.blueimp-gallery > .title:hover {
  opacity: .5; }

.blueimp-gallery-controls > .prev,
.blueimp-gallery-controls > .next,
.blueimp-gallery-controls > .close,
.blueimp-gallery-controls > .title {
  display: block; }

.blueimp-gallery-single > .prev,
.blueimp-gallery-left > .prev,
.blueimp-gallery-single > .next,
.blueimp-gallery-right > .next {
  display: none; }

.blueimp-gallery > .slides > .slide > .slide-content,
.blueimp-gallery > .prev,
.blueimp-gallery > .next,
.blueimp-gallery > .close {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none; }

/* Replace PNGs with SVGs for capable browsers (excluding IE<9) */
body:last-child .blueimp-gallery > .slides > .slide-error {
  background-image: url(/img/error.svg); }

body:last-child .blueimp-gallery > .play-pause {
  width: 20px;
  height: 20px;
  background-size: 40px 20px;
  background-image: url(/img/play-pause.svg); }

body:last-child .blueimp-gallery-playing > .play-pause {
  background-position: -20px 0; }

img, video, audio, iframe, object {
  display: block;
  margin: 0 auto;
  max-width: 100%;
  height: auto; }

.gm-style img, img[width], img[height] {
  /* [2] */
  max-width: none; }

audio,
canvas,
img,
video {
  vertical-align: middle; }

a img {
  border: none; }

.media {
  position: relative;
  padding-top: 30px;
  padding-bottom: 56.25%;
  height: 0;
  height: auto;
  max-width: 100%;
  margin-bottom: 1em;
  overflow: hidden; }

.media iframe,
.media object,
.media embed,
.media video {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 0;
  margin: 0;
  border: 0;
  outline: none;
  background-color: transparent; }

/*# sourceMappingURL=data:application/json;base64, */