/*------------------------------------*\
    #MIXINS
\*------------------------------------*/

/*  #Font face mixin
--------------------------------------*/

@mixin web-font($name, $path, $weight: null, $style: null, $exts: eot woff ttf) {

  $src: null; //define varaible
 
  $extmods: ( //extension modifications
    eot: "?#iefix"
  );
 
  $formats: ( //type formats
    otf: "opentype",
    ttf: "truetype",
    eot: "embedded-opentype"
  );
 
  @each $ext in $exts { // each extension in the variable $exts
    $extmod: if(
      map-has-key($extmods, $ext),    // check if an $ext has $extmods declared
      $ext + map-get($extmods, $ext), // add $extmod to the $ext
      $ext                            // or just spit out $ext
    );
    $format: if(
      map-has-key($formats, $ext),    // check if an $ext has $formats declared
      map-get($formats, $ext),        // add $format to the $ext
      $ext                            // or just spit out $ext
    );

    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), 'comma');
    // appends different urls and format with commas 
  }
 
  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: url(quote($path + "." + "eot"));
    src: $src;
  }
}

/*  #Responsive breakpoints mixin
--------------------------------------*/
@mixin break($breakPoint) {
  @media screen and (min-width: $breakPoint) {
    @content;
  }
}

@mixin break-max($breakPoint) {
  @media screen and (max-width: $breakPoint - em(1)) {
    @content;
  }
}


/*  #Size helper
--------------------------------------*/

@mixin size($width, $height: $width) { 
  width: $width;
  height: $height;
}


/*  #placeholder helper
--------------------------------------*/
@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}  
}

@mixin placeholder-focus {
  input:focus::-webkit-input-placeholder {@content}
  input:focus:-moz-placeholder           {@content}
  input:focus::-moz-placeholder          {@content}
  input:focus:-ms-input-placeholder      {@content}
  textarea:focus::-webkit-input-placeholder {@content}
  textarea:focus:-moz-placeholder           {@content}
  textarea:focus::-moz-placeholder          {@content}
  textarea:focus:-ms-input-placeholder      {@content} 
}

// Apply ‘attention’ styles in one go.
@mixin attention($self: all) {

  @if $self == all {

    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }

  }

  @elseif $self == hover {

    &:hover,
    &:active,
    &:focus {
      @content;
    }

  }

}
